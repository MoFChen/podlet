[package]
name = "podlet"
version = "0.2.1"
authors = ["Paul Nettleton <k9@k9withabone.dev>"]
edition = "2021"
description = "Generate podman quadlet files from a podman command or a compose file"
readme = "README.md"
repository = "https://github.com/k9withabone/podlet"
license = "MPL-2.0"
keywords = ["podman", "quadlet", "containers"]
categories = ["command-line-utilities"]

[lints.rust]
unused_crate_dependencies = "warn"
unused_import_braces = "warn"
unused_lifetimes = "warn"
unused_macro_rules = "warn"
unused_qualifications = "warn"

[lints.clippy]
pedantic = "warn"

cargo = { level = "warn", priority = -1 }
multiple_crate_versions = "allow"

# restriction lint group
clone_on_ref_ptr = "warn"
dbg_macro = "warn"
empty_drop = "warn"
empty_structs_with_brackets = "warn"
exit = "warn"
format_push_string = "warn"
if_then_some_else_none = "warn"
indexing_slicing = "warn"
integer_division = "warn"
mixed_read_write_in_expression = "warn"
mod_module_files = "warn"
multiple_inherent_impl = "warn"
needless_raw_strings = "warn"
panic = "warn"
pub_without_shorthand = "warn"
rc_buffer = "warn"
rc_mutex = "warn"
redundant_type_annotations = "warn"
rest_pat_in_fully_bound_structs = "warn"
same_name_method = "warn"
semicolon_outside_block = "warn"
string_slice = "warn"
string_to_string = "warn"
suspicious_xor_used_as_pow = "warn"
tests_outside_test_module = "warn"
todo = "warn"
try_err = "warn"
unimplemented = "warn"
unnecessary_self_imports = "warn"
unreachable = "warn"
unwrap_used = "warn"
verbose_file_reads = "warn"

[dependencies]
clap = { version = "4.2", features = ["derive"] }
color-eyre = "0.6"
docker-compose-types = "0.7.0"
duration-str = { version = "0.7", default-features = false }
indexmap = "2"
ipnet = { version = "2.7", features = ["serde"] }
k8s-openapi = { version = "0.20", features = ["latest"] }
serde = { version = "1", features = ["derive"] }
serde_yaml = "0.9.21"
shlex = "1.1"
thiserror = "1.0.40"
url = "2.3"

[target.'cfg(unix)'.dependencies]
nix = { version = "0.26", features = ["user"], default-features = false }
zbus = "3.12"

# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"

# Config for 'cargo dist'
[workspace.metadata.dist]
# The preferred cargo-dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.5.0"
# CI backends to support
ci = ["github"]
# Target platforms to build apps for (Rust target-triple syntax)
targets = ["x86_64-unknown-linux-gnu", "aarch64-apple-darwin", "x86_64-apple-darwin", "x86_64-unknown-linux-musl", "x86_64-pc-windows-msvc"]
# The installers to generate for each app
installers = []
# Publish jobs to run in CI
pr-run-mode = "plan"
